{
  "repository": {
    "pullRequests": {
      "edges": [
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-30T07:50:27Z",
            "title": "Update to PID qa and spectra tasks",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-30T13:37:34Z",
            "title": "PWGFH: Adding Lc in pKpi in the analysis workflow",
            "author": {
              "login": "DelloStritto"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFCandidateSelectionTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFLcCandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskLc.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-30T14:50:45Z",
            "title": "Fix authorship",
            "author": {
              "login": "ginnocen"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CODEOWNERS"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "fix folder name",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": []
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T07:51:49Z",
            "title": "Merged hist and output obj sinks",
            "author": {
              "login": "saganatt"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T20:32:21Z",
            "title": "Split MID reconstruction workflow into digits reader and digits to track",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/DigitReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/RawDecoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/RecoWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/ZeroSuppressionSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RawDecoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RecoWorkflowMC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/ZeroSuppressionSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/digits-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/raw-to-digits-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T18:01:25Z",
            "title": "Use correct detector in function name",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/include/MIDCTF/CTFCoder.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-31T16:23:18Z",
            "title": "Do not track neutral particles for MID",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/src/Stepper.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T07:49:40Z",
            "title": "PWGHF: Adressing comments to the pull request #4727",
            "author": {
              "login": "DelloStritto"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFCandidateSelectionTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFLcCandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskD0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGJE/jetfinderhf.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-01T00:58:40Z",
            "title": "DPL: hopefully fix current CPU detection",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T17:24:58Z",
            "title": "Event quality flag added to CTF; ",
            "author": {
              "login": "AllaMaevskaya"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/CTF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/LookUpTable.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/CTF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/include/FT0Reconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/src/CollisionTimeRecoTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T07:52:57Z",
            "title": "HistogramRegistry: add print function",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/HistogramRegistry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-08T11:14:44Z",
            "title": "Work to improve TPC cluster rejection",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonMath.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUDefGPUParameters.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUParam.inc"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionKernels.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionKernels.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMergedTrack.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMerger.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMerger.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMergerGPU.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMergerGPU.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMPropagator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMPropagator.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMTrackParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T09:09:15Z",
            "title": "A few simple script adjustments",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/Tools/jobutils.sh"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Tools/monitor-mem.sh"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T10:59:53Z",
            "title": "removing obsolete matcher tasks",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/run2Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/run3Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ZDCVZeroIteration.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T16:36:44Z",
            "title": "Improve MID raw data encoding",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/ColumnDataToLocalBoard.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/Encoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/GBTUserLogicEncoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/ColumnDataToLocalBoard.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/GBTUserLogicEncoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/test/testRaw.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T13:44:55Z",
            "title": "Detectors/TOF: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/Digit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/Geo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/Strip.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/WindowFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/test/testTOFIndex.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/CalibTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/CalibTOFapi.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/CollectCalibInfoTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/TOFCalibCollector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/TOFChannelCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/testWorkflow/TOFCalibCollectorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/testWorkflow/TOFCalibCollectorWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/testWorkflow/tof-calib-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/compression/include/TOFCompression/Compressor.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/compression/src/Compressor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/compression/src/CompressorTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/compression/src/tof-compressed-inspector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/DecoderBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Clusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/ClustererTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/DataReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Decoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/DecoderBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/DigitizerTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedAnalysisTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedDecodingTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedInspectorTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFClusterizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFRawWriterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T12:26:31Z",
            "title": "moving StepTHn to AnalysisTools folder",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCoreLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsFiltered.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsMixed.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/include/Framework/StepTHn.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/src/AnalysisToolsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/src/StepTHn.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/CMakeLists.txt"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-02T19:18:53Z",
            "title": "HistogramRegistry: remove fillWeight",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/trackqa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-04T11:13:53Z",
            "title": "Detectors/TPC: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/CRU.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/Mapper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/PadROCPos.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/src/CDBInterface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/src/Mapper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/src/PadRegionInfo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/src/Painter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/src/Utils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/test/testTPCMapper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/include/TPCCalibration/CalibRawBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibPedestal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibPulser.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibRawBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibTreeDump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/DigitDump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/monitor/src/SimpleEventDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/DigitalCurrentClusterIntegrator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/GBTFrameContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/HwClusterer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/RawReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/RawReaderCRU.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/SyncPatternMonitor.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/run/readGBTFrames.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/run/readRawData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/AdcClockMonitor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/ClustererTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/GBTFrameContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/HardwareClusterDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/HwClusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/RawReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/RawReaderCRU.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/TPCFastTransformHelperO2.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/test/testTPCFastTransform.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/include/TPCSimulation/ElectronTransport.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/include/TPCSimulation/SAMPAProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/src/GEMAmplification.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/src/PadResponse.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/LinkZSToDigitsSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/ZSSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T13:22:54Z",
            "title": "Detectors/TRD: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/PadParameters.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/TRDGeometryFlat.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/TRDPadPlane.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalDet.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalOnlineGainTables.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalROC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/Calibrations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/ChamberStatus.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/FeeParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/PadResponse.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDCommonParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDDiffAndTimeStructEstimator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDGeometryBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/TrapConfig.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/TrapSimulator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapConfigHandler.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapSimulator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-04T20:37:42Z",
            "title": "TPC compression track model",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionTrackModel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionTrackModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T22:05:00Z",
            "title": "Update configurable name in QATask",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/qaTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Add more impact parameter plots for the QA",
            "author": {
              "login": "hzanoli"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/qaTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T07:02:21Z",
            "title": "new MCH track format + update of tracking workflows",
            "author": {
              "login": "pillot"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MCH/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MCH/include/DataFormatsMCH/TrackMCH.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MCH/src/DataFormatsMCHLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MCH/src/TrackMCH.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackExtrap.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFinder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFinderOriginal.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFitter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackAtVertexSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackExtrap.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderOriginal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderOriginalSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFitter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFitterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/ClusterSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/ClusterSamplerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackAtVertexSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackAtVertexSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderOriginalSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderOriginalSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFitterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackSamplerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackSinkSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackSinkSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/VertexSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/VertexSamplerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/clusters-sampler-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/clusters-to-tracks-original-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/clusters-to-tracks-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/tracks-sampler-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/tracks-sink-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/tracks-to-tracks-at-vertex-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/tracks-to-tracks-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/vertex-sampler-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T18:30:36Z",
            "title": "Set ITS/MFT global chip ID during decoding",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/AlpideCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/RUDecodeData.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/RawPixelReader.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-03T18:20:58Z",
            "title": "removed obsolete DataBlock references",
            "author": {
              "login": "sy-c"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/ReadoutAdapter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingReadoutAdapter.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-04T11:13:33Z",
            "title": "Rename TRD classes from TRDFoo to Foo",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/Tracklet64.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/CalDet.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/CalOnlineGainTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/CalPadStatus.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/CalSingleChamberStatus.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/Calibrations.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/ChamberCalibrations.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/ChamberNoise.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/ChamberStatus.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/CommonParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/DiffAndTimeStructEstimator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/FeeParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/GeometryBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/GeometryFlat.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/PadCalibrations.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/PadParameters.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/PadPlane.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/SimParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/Tracklet.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/macros/OCDB2CCDB.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalDet.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalOnlineGainTables.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalPad.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalPadStatus.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CalSingleChamberStatus.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/Calibrations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/ChamberNoise.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/CommonParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/DiffAndTimeStructEstimator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/FeeParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/GeometryBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/GeometryFlat.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/PadPlane.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/SimParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDBaseLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/Tracklet.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/test/testArrayADC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/test/testTRDDiffusionCoefficient.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/test/testTRDGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/macros/CheckDigits.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/macros/CheckHits.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/Detector.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/Digitizer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/Trap2CRU.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapConfigHandler.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapSimulator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrapSimulatorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUDataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUO2DataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUO2FakeClasses.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionIncludesDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingIO.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/tools/createGeo.C"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/tools/dumpTRDClusterMatrices.C"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDGeometry.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTrackerComponent.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/macros/run_trd_tracker.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T10:50:33Z",
            "title": "DPL: Add array support to Variant",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Variant.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/BoostOptionsRetriever.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ConfigParamsHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/Variant.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_Variants.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T11:29:31Z",
            "title": "Applied change for TOF commissioning in real data",
            "author": {
              "login": "noferini"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/WindowFiller.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/TOFBaseLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/WindowFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Clusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Decoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/include/TOFSimulation/TOFSimParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/TOFSimParams.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/simulation/src/TOFSimulationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSplitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedDecodingTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/EntropyDecoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFDigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/digit-writer-commissioning.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/TOFDigitizerSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-04T08:31:41Z",
            "title": "DPL: improve rate limit",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessingDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Initial version of EMCAL Correction Task",
            "author": {
              "login": "raymondEhlers"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/EMCALClusters.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/emcalCorrectionTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T12:21:47Z",
            "title": "[QC-471] Do not create a Dispatcher if there are no policies",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/Dispatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSampling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/Dispatcher.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T12:52:12Z",
            "title": "using histogram registry",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/PairCuts.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DO NOT MERGE Drop boost::serialize support",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DPLBoostSerializer.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataAllocator.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/InputRecord.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/RawBufferContext.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/SerializationMethods.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/TypeTraits.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_BoostSerializedProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/test/benchmark_Types.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T07:19:49Z",
            "title": "HistogramRegistry: add function to check if name is already used",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/HistogramRegistry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T19:00:05Z",
            "title": "TRD fix digit sorting",
            "author": {
              "login": "bazinski"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/LinkRecord.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/DataFormatsTRDLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/LinkRecord.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrapSimulatorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T18:51:43Z",
            "title": "DPL: make ProcessingContext forward declare its contents",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/RawReaderFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ProcessingContext.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_SimpleRDataFrameProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Utils/include/DPLUtils/RootTreeReader.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T13:53:51Z",
            "title": "Add histogram registry to QA task",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/qaTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-07T07:19:03Z",
            "title": "A few changes and optimizations",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableReader.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-12T16:45:52Z",
            "title": "TRD tracking as a DPL workflow",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/Tracklet64.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDGlobalTrackingSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrackWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrackingWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrackletReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDGlobalTrackingSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrackWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrackingWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrackletReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/trd-tracking-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/GPUTrackingLinkDef_O2.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/macros/run_trd_tracker.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "HistogramRegistry: allow compile-time hashing of hist names",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/HistogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_HistogramRegistry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-05T16:02:08Z",
            "title": "Include what is needed (Root 6.23.01)",
            "author": {
              "login": "pzhristov"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/include/Analysis/configurableCut.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/TrackFwd.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CPV/base/include/CPVBase/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/include/PHOSBase/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T07:02:53Z",
            "title": "Do not add global using namespace std in the generation of Root dictionaries",
            "author": {
              "login": "pzhristov"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "cmake/rootcling_wrapper.sh.in"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T07:03:40Z",
            "title": "Update shaping time of electronics",
            "author": {
              "login": "wiechula"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/ParameterElectronics.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/TPCFastTransformHelperO2.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T10:17:31Z",
            "title": "Use correct data description for MID raw writer spec",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RawWriterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T09:49:19Z",
            "title": "Added TFNumber getter function, some dummy tables, some minor fixes applied.",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/AOD/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflowSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflowSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T01:03:48Z",
            "title": "DPL GUI: allow attaching more than one debugger",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDebugger.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDeviceInspector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T08:10:52Z",
            "title": "DPL: use enum for AOD dumping logic",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T14:54:50Z",
            "title": "Stepper update",
            "author": {
              "login": "mwinn2"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Stepper.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T13:40:35Z",
            "title": "Detectors/Upgrades: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/base/include/ITS3Base/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/simulation/src/V3Layer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/simulation/src/V3Services.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/base/include/ITS4Base/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/simulation/src/V3Layer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/simulation/src/V3Services.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Include multi-pixel clusters into the noise calibration",
            "author": {
              "login": "iouribelikov"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/ClusterPattern.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/NoiseMap.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/TopologyDictionary.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/src/TopologyDictionary.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/Calib/MakeNoiseMapFromClusters.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/test/CheckTopologies.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/src/CookedTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/src/IOUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/AlpideCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/AlpideCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/Clusterer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T12:29:52Z",
            "title": "Rename MID option to use the name parameter name as other detectors",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T12:43:32Z",
            "title": "Fix full-system-test benchmark after change in MID workflow",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T13:44:59Z",
            "title": "Better cleanup in taskwrapper: Avoid leaving behind dev/shm segments",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/Tools/jobutils.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T16:57:07Z",
            "title": "TPC Workflow: Fix workflow in case creating only clusters but no tracs with ca-clusterer",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/RecoWorkflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T19:33:11Z",
            "title": "DPL Analysis: do not write to disk TFN output.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[O2-1749] Forward declare inputrecord",
            "author": {
              "login": "Barthelemy"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ProcessingContext.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "DPL: forward declare InputProxy.h",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ProcessingContext.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T19:32:17Z",
            "title": "DPL: keep running when in EOF",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T19:32:37Z",
            "title": "GPU: Add an option to the TPC workflow to scale all buffer size estimations with a factor",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfiguration.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[WIP] MCH: added error handler in raw decoder",
            "author": {
              "login": "aferrero2707"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Common/include/MCHRawCommon/SampaCluster.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Common/src/SampaCluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/include/MCHRawDecoder/DataDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/include/MCHRawDecoder/ErrorCodes.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/include/MCHRawDecoder/PageDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/include/MCHRawDecoder/RawDecoderHandlers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/BareElinkDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/BareGBTDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/DataDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/PageDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/PayloadDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/UserLogicElinkDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/UserLogicEndpointDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/testBareElinkDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Decoder/src/testUserLogicEndpointDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/Tools/rawdump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Raw/test/testClosureCoDec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/DataDecoderSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-06T21:35:11Z",
            "title": "TPC: Remove crossing-CE flag if all clusters on one side are rejected",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/GPUCATracking.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T08:16:51Z",
            "title": "GPU Optimizations",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/Common/GPUDefGPUParameters.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/test/testGPUsortCUDA.cu"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUParam.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUParamRTC.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstruction.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionIncludes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionIncludesDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionKernels.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettings.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/cuda/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/cuda/GPUReconstructionCUDA.cu"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/cuda/GPUReconstructionCUDADef.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/hip/GPUReconstructionHIP.hip.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompression.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompression.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionKernels.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionKernels.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionTrackModel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfigurableParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfigurableParam.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfiguration.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMerger.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMergerTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMPropagator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMSliceTrack.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMTrackParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCGlobalTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCSliceData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCTracker.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCTrackerDump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCTrackletConstructor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qconfigoptions.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/standalone.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/utils/qconfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/utils/qconfig.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/utils/qconfig_helpers.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/utils/qconfigrtc.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCConvert/GPUTPCConvert.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCConvert/GPUTPCConvertImpl.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/dEdx/GPUdEdx.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/dEdx/GPUdEdx.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[WIP] TRD Tracklet Transformer Workflow",
            "author": {
              "login": "jbarrella"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/CalibratedTracklet.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/Constants.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/DataFormatsTRDLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/include/TRDBase/TrackletTransformer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TrackletTransformer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDCalibratedTrackletWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrackletTransformerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDCalibratedTrackletWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrackletTransformerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrackletTransformerWorkflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-08T14:36:16Z",
            "title": "EMCAL CTF",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/include/DataFormatsEMCAL/CTF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/include/DataFormatsEMCAL/Cell.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/CTF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/DataFormatsEMCALLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/test/test_ctf_io_emcal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/CTFReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/CTFWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/ctf-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/include/EMCALReconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/include/EMCALReconstruction/CTFHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CTFHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/include/EMCALWorkflow/EntropyDecoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/include/EMCALWorkflow/EntropyEncoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/EntropyDecoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/EntropyEncoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/emc-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/entropy-encoder-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-08T19:10:47Z",
            "title": "full_system_test: Remove spurious symbol",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T09:15:04Z",
            "title": "Suppress TOF ctf input mode: digits input will be provided by CTFreader w-flow",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/tofworkflow/src/tof-reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T00:58:29Z",
            "title": "fix in p.vertex - tracks matcher initialization",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/primary-vertexing-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T11:16:06Z",
            "title": "GPU: Reject tracks with too large fraction of ignored clusters",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMTrackParam.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T12:36:16Z",
            "title": "DPL: do not invoke end of stream for pipe devices",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "PWGHF: Add Dplus variables and histograms",
            "author": {
              "login": "fcatalan92"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/RecoDecay.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskDPlus.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T18:59:02Z",
            "title": "Use constexpr for histogram naming",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T12:44:26Z",
            "title": "create dict in full system test",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T13:34:55Z",
            "title": "More stability fixes in utils + workflows",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/Tools/jobutils.sh"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T15:02:58Z",
            "title": "DPL: variable names should be camel-cased, starting with lowercase",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T10:13:42Z",
            "title": "Added MC events to min/max glob. BC finder",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflowSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflowSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-09T19:14:58Z",
            "title": "GPU: Fix inconsistent usage of maxVDrift for computation of time0 and deltaFwd/deltaBwd",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/GPUCATracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMTrackParam.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T16:09:52Z",
            "title": "DPL: do proper ZMQ polling to avoid deadlocking",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T16:13:36Z",
            "title": "Add timers for MFT, FT0, TPC reco. workflows",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/ReconstructionSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ReconstructionSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/include/MFTWorkflow/TrackerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/src/TrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/EntropyDecoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/EntropyDecoderSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T21:49:30Z",
            "title": "DPL: keep polling when one EoS received",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T16:14:15Z",
            "title": "Fix MID encoding when there are no digits to encode",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/Encoder.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-10T12:37:47Z",
            "title": "Use 61 as minimum CUDA compute capability to support half precision",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "dependencies/FindO2GPU.cmake"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-11T15:44:41Z",
            "title": "Residuals: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsFiltered.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Calibration/include/DataFormatsCalibration/MeanVertexObject.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/Cell.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/test/testCell.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DCSProcessor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FDD/reconstruction/src/ReadRaw.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/include/PHOSSimulation/GeometryParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/include/DetectorsRaw/RawFileReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/WindowFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSplitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Base/include/EventVisualisationBase/DataInterpreter.h"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Base/src/DataSourceOffline.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Base/src/GeometryManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/DataConverter/src/VisualisationCluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/DataConverter/src/VisualisationTrack.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Detectors/src/DataInterpreterVSD.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Detectors/src/DataReaderVSD.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/View/src/EventManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/View/src/Initializer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/View/src/main.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/include/Framework/StepTHn.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/AnalysisTools/src/StepTHn.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonMath.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionCPU.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMPropagator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/SplineHelper1D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastSpaceChargeCorrection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastTransform.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastTransformGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/devtools/IrregularSpline1D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/devtools/IrregularSpline2D3D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/devtools/IrregularSpline2D3DCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/devtools/RegularSpline1D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Utils/FlatObject.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/DecayerPythia8.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/Generator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFromFile.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorHepMC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorPythia6.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorPythia8.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/PrimaryGenerator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/TriggerParticle.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/CPVDigitizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/EMCALDigitizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/PHOSDigitizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/src/InteractionSampler.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/src/O2MCApplication.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/Dispatcher.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-11T10:52:17Z",
            "title": "Provide TPC Tracking QA to QC (Part 1)",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/CATrackerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/RecoWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/tpc-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/GPUTrackingLinkDef_O2.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfiguration.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceQA.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplayKeys.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-12T12:03:03Z",
            "title": "CCDB API: generalization of content retrieval (part 1)",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CCDB/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "CCDB/include/CCDB/CcdbApi.h"
                  }
                },
                {
                  "node": {
                    "path": "CCDB/src/CcdbApi.cxx"
                  }
                },
                {
                  "node": {
                    "path": "CCDB/test/testCcdbApi_alien.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "adjust to production CCDB",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/efficiencyGlobal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/efficiencyPerRun.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-12T10:01:49Z",
            "title": "GPU: Add setter to initialize GPUReconstruction with only the recoSte…",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstruction.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstruction.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[QC-451] Adapt the adapter to the rawFormat 1 of Readout",
            "author": {
              "login": "Barthelemy"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingReadoutAdapter.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-12T13:21:40Z",
            "title": "Add minor comment to TrackSelectionTables.h",
            "author": {
              "login": "aimeric-landou"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/TrackSelectionTables.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-11T20:57:45Z",
            "title": "DPL: fix naming for internal-dpl-***aod***-index-builder",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-11T20:59:48Z",
            "title": "Revert \"DPL: keep polling when one EoS received\"",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Add option to push TCanvases with full layout to QC instead of individual histograms for TPC Tracking QA",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCCompressionKernels.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceQA.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Use unique board ID in LocalBoardRO",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/ColumnDataToLocalBoard.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/CrateMapper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/ColumnDataToLocalBoard.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/CrateMapper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/GBTUserLogicEncoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/test/testRaw.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-12T10:17:43Z",
            "title": "DPL: fix name of global-analysis-file-sink",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Small Updates for dimuon analysis",
            "author": {
              "login": "vfeuilla"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/ReducedInfoTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonMuMu.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker_pp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Decrease verbosity of ITS-TPC matching",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/GlobalTracking/src/MatchTPCITS.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Uniformize MID workflows",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/DigitsToRawWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/DigitsToRawWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/digits-to-raw-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/mid-reco-workflow-mc.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/mid-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/full_system_test.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: improve DataSpecUtils",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: consider internal-dpl-injected devices as real devices",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}

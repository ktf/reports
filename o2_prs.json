{
  "repository": {
    "pullRequests": {
      "edges": [
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T08:48:05Z",
            "title": "Workaround for readability-braces-around-statements bug",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingIO.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T21:53:02Z",
            "title": "[DCS] Helpers for (fake) DCS aliases generation",
            "author": {
              "login": "aphecetche"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/DCS/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/AliasExpander.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointCompositeObject.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointCreator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointGenerator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointValue.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/AliasExpander.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointCompositeObject.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointGenerator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DetectorsDCSLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/test/testAliasExpander.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/test/testDataPointGenerator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/test/testDataPointTypes.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/DCSRandomDataGeneratorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/dcs-random-data-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/README.md"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-18T18:58:26Z",
            "title": "Addition of a TableMaker for Muon Only",
            "author": {
              "login": "vfeuilla"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMakerMuon_pp.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-19T14:20:26Z",
            "title": "(O2-1203) [rANS] Iterators for tranforming rANS input/Output ",
            "author": {
              "login": "MichaelLettrich"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/rANS/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/rANS/benchmarks/bench_ransCombinedIterator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/rANS/include/rANS/utils.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/rANS/include/rANS/utils/CombinedIterator.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/rANS/test/test_ransCombinedIterator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T13:40:59Z",
            "title": "Changes to strangeness tables: filter at producer level",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadefinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T10:02:54Z",
            "title": "Fixing CCDB filling for DCS processors",
            "author": {
              "login": "chiarazampolli"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/DCSDataProcessorSpec.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-19T19:54:26Z",
            "title": "Rate limiting",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DeviceMetricsInfo.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ExternalFairMQDeviceProxy.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ResourcesMonitoringHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ResourcesMonitoringHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T09:31:24Z",
            "title": "DPL Analysis: adapt the internals to Configurable<vector>",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/configurableObjects.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ConfigParamRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ConfigParamStore.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ConfigParamsHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Variant.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/BoostOptionsRetriever.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ConfigParamsHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceConfigInfo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/PropertyTreeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/Variant.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DeviceConfigInfo.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TRD trapsim clean up",
            "author": {
              "login": "bazinski"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/LinkRecord.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/RawData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/Tracklet64.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/DataFormatsTRDLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/LinkRecord.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/RawData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/macros/OCDB2CCDB.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/macros/OCDB2CCDBTrapConfig.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/TrapSimulator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TRDSimulationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapSimulator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDTrapSimulatorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "(O2-1813)[GPU] Rename double overloads for math functions",
            "author": {
              "login": "MichaelLettrich"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Common/MathUtils/include/MathUtils/Utils.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/MathUtils/include/MathUtils/detail/trigonometric.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonMath.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline1DHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline2DHelper.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "DO NOT MERGE Testing GitHub review process",
            "author": {
              "login": "TimoWilken"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/ALICE3/alice3-trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "PWGHF: DO NOT MERGE YET, PreSelection Changes ",
            "author": {
              "login": "nzardosh"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/HFConfigurables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCoreLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/HFConfigurables.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "DO NOT MERGE Testing GitHub review process",
            "author": {
              "login": "TimoWilken"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/ALICE3/alice3-trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "tutorial for finding compatible bcs",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/compatibleBCs.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-19T21:40:37Z",
            "title": "GPU: Fix segfault when one TPC sector is empty and data is passed to …",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/SliceTracker/GPUTPCTracker.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-19T23:52:30Z",
            "title": "DPL: fix warning in benchmark_WorkflowHelpers.cxx",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/test/benchmark_WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T08:08:37Z",
            "title": "Some improvements to TPC tracking visualization",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: automatic input proxy",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T11:45:49Z",
            "title": "Fix for reading external Hijing kinematics",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Generators/src/GeneratorFromFile.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T11:30:12Z",
            "title": "[rANS] Fix: missing return statements",
            "author": {
              "login": "MichaelLettrich"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/rANS/include/rANS/utils/CombinedIterator.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-20T20:02:37Z",
            "title": "DPL: introduce \"Optional\" lifetime",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Lifetime.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/LifetimeHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/LifetimeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-22T20:19:00Z",
            "title": "PWGHF: Add histogram on vertex covariance matrix to QA task",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/qaTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T07:43:16Z",
            "title": "MCKinematicsReader: API to fetch TrackReferences",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Steer/include/Steer/MCKinematicsReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/src/MCKinematicsReader.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-22T08:58:59Z",
            "title": "CcdbApi improvements",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CCDB/src/CcdbApi.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Make cascade producer filter as well if asked to",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadefinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-22T15:44:54Z",
            "title": "DPL: fix DDS config generation with empty --channel-prefix",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DDSConfigHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-22T20:18:33Z",
            "title": "Casc producer now able to filter",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadefinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T16:45:26Z",
            "title": "PWGHF: Fix unit in axis title for QA task",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/qaTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T14:21:32Z",
            "title": "GPU: Set correct ASM language for assembler files during GPU compilation",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/cuda/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/opencl/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/opencl2/CMakeLists.txt"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T13:35:23Z",
            "title": "Add some required getters to MCTruthContainer and MCKinematicsReader",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/MCTruthContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/include/Steer/MCKinematicsReader.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T07:44:32Z",
            "title": "TOF clusterizer improved",
            "author": {
              "login": "noferini"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/Cluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/Clusterer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Clusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/DataReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSplitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedDecodingTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFClusterWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFClusterizerSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Revert \"DPL: check dictionary creation when InputSpec / OutputSpec is…",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/test/TestClasses.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T12:04:54Z",
            "title": "DPL: drop check of InputSpec.h in dictionaries",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/test/TestClasses.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T16:16:20Z",
            "title": "AlpideCoder: skip chips with all hits masked as noise",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/AlpideCoder.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T12:04:23Z",
            "title": "DPL: report metrics by device id, not device role",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/ResourcesMonitoringHelper.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL Analysis: nested vector for struct configurable",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/include/Analysis/configurableCut.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ConfigurableCutLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/configurableCut.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T13:47:34Z",
            "title": "[FV0] Trigger in digits",
            "author": {
              "login": "arvindkhuntia"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FV0/include/DataFormatsFV0/BCData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FV0/src/DataFormatsFV0LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/test/test_ctf_io_fv0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FV0/reconstruction/include/FV0Reconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FV0/reconstruction/src/ReadRaw.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FV0/simulation/include/FV0Simulation/FV0DigParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FV0/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/FV0DigitizerSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T19:04:14Z",
            "title": "avoid non constexpr string lookups",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T15:58:13Z",
            "title": "Taskwrapper: Timeout handling + other improvements",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/Tools/jobutils.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-23T19:12:39Z",
            "title": "DPL: allow Lifetime::Optional to work with ORIGIN/DESCRIPTION",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "First commit of the DQ FilterPP, CutsLibrary and HistogramsLibrary",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/ReducedInfoTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/CutsLibrary.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/HistogramsLibrary.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/PWGDQCoreLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonMuMu.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/filterPP.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T15:40:14Z",
            "title": "MFT: speed-up the tracking",
            "author": {
              "login": "bovulpes"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Cell.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Constants.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/ROframe.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Road.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/TrackCA.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Tracker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/src/ROframe.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/src/Tracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/src/TrackerSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T10:00:56Z",
            "title": "DPL: do not crash when --dump-workflow-file is used (O2-1843)",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T21:54:29Z",
            "title": "Switched from ITS-TPC tracks to vertices in minBC/maxBC finder function. Adapted event selection and multiplicity tasks for Run 3. ",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/EventSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelectionQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflowSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflowSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T15:04:10Z",
            "title": "DPL Analysis: add metrics for bytes read",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T18:17:53Z",
            "title": "IndexedTrackref changes",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/include/DetectorsCommonDataFormats/SimTraits.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/DataFormatsFT0LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/src/Stack.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/include/Steer/MCKinematicsReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/src/MCKinematicsReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/src/O2MCApplication.cxx"
                  }
                },
                {
                  "node": {
                    "path": "macro/duplicateHits.C"
                  }
                },
                {
                  "node": {
                    "path": "run/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "run/O2HitMerger.h"
                  }
                },
                {
                  "node": {
                    "path": "run/checkStack.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T15:53:17Z",
            "title": "CcdbApi: A little bit of thread safety",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CCDB/include/CCDB/CcdbApi.h"
                  }
                },
                {
                  "node": {
                    "path": "CCDB/src/CcdbApi.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T07:49:44Z",
            "title": "[EMCAL-610] Fix channel header in payload encoding",
            "author": {
              "login": "mfasDa"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/macros/RawFitterTESTs.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/include/EMCALSimulation/RawWriter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/RawWriter.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Add solid table to be written to file",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T18:19:47Z",
            "title": "minor fix ",
            "author": {
              "login": "AllaMaevskaya"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/include/FT0Reconstruction/CTFCoder.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T07:48:48Z",
            "title": "DCS proxy to retrieve DCS DPs from ADAPOS",
            "author": {
              "login": "chiarazampolli"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/DCS/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/DCSConsumerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/DCStoDPLconverter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/dcs-data-client-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/testWorkflow/dcs-proxy.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T06:05:26Z",
            "title": "DPL Analysis: add metric for read calls",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-24T23:29:22Z",
            "title": "DPL Analysis: actually delete a tree once done",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T13:01:42Z",
            "title": "GPU TPC QA: Use MCKinematicsReader to obtain MC truth",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T11:19:14Z",
            "title": "DPL: avoid segmentation violation when infos is empty",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T13:04:36Z",
            "title": "GPU: Add missing configKeyValues dictionary",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/GPUTrackingLinkDef_O2.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T19:44:28Z",
            "title": "[DPL Analysis] Helper to create partitions in process() + extended expressions to int64_t",
            "author": {
              "login": "saganatt"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/partitions.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Expressions.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/Expressions.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T11:09:45Z",
            "title": "Update code-formatting.yml",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: send config as a JSON when possible",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceConfigInfo.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-25T13:12:44Z",
            "title": "DPL: fix compilation of DPL_ENABLE_BACKTRACE",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[WIP] Update GPUTrackingLinkDef_O2.h",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/GPUTrackingLinkDef_O2.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T20:47:32Z",
            "title": "DPL: add helpers for compile-time strings",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/StringHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_StringHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Initial concept of tracking inhibit with configurable param settings",
            "author": {
              "login": "preghenella"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/StackParam.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/src/Stack.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T13:49:52Z",
            "title": "PSU cooling pipes to the patch panel",
            "author": {
              "login": "frmanso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/base/src/PowerSupplyUnit.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-26T13:46:22Z",
            "title": "Pure generator kinematics simulation example",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "doc/DetectorSimulation.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/JustPrimaryKinematics/only_primarykine.ini"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/JustPrimaryKinematics/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/README.md"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Move ConfigurableMacroHelper plugin service helper in CommonUtils",
            "author": {
              "login": "preghenella"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Common/Utils/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Common/Utils/include/CommonUtils/ConfigurationMacroHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/StackParam.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/src/Stack.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorPythia8.cxx"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Selective_Tranport/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Selective_Tranport/sim.ini"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Selective_Tranport/transportPDG.macro"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T07:59:43Z",
            "title": "Fix geometry with ENABLE_UPGRADES",
            "author": {
              "login": "qgp"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "macro/build_geometry.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL Analysis: easy way to filter a table on the fly",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/associatedExample.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramsFullTracks.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-12-01T07:52:14Z",
            "title": "o2-sim kinematics as event generator",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/MCTrack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/ParticleStatus.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/GeneratorFromFile.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFromFile.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorsLinkDef.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-12-01T07:58:59Z",
            "title": "Add adapt... call (was forgotten) ",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T07:13:05Z",
            "title": "Quick fix: change of trigger in dimuon task",
            "author": {
              "login": "vfeuilla"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonMuMu.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Adding McParticles and McTrackLabels to the converter",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflowSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflowSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-27T09:10:14Z",
            "title": "Revert \"add EventStatusWord to CTF and minor fix  (#4911)\"",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/include/FT0Reconstruction/CTFCoder.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TPCClusterFinder: Rename TPCCalibration class to TPCPadGainCalib.",
            "author": {
              "login": "fweig"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/test/testGPUCATracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUConstantMem.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUDataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingIO.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCCFPeakFinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCClusterFinder.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/TPCPadGainCalib.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/TPCPadGainCalib.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: add type trait helper for compile-time strings",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/StringHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_StringHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-28T14:52:17Z",
            "title": "Moving the configuration parameters to a TFolder OutputObj",
            "author": {
              "login": "victor-gonzalez"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/dptdptcorrelations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-29T13:07:47Z",
            "title": "Fixed unit test Detectors/CTF/test/test_ctf_io_ft0.cxx",
            "author": {
              "login": "AllaMaevskaya"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/DataFormatsFT0LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/test/test_ctf_io_ft0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockFT0.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-28T08:12:30Z",
            "title": "Fix macro/run_trac_alice3.C compilation",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "macro/run_trac_alice3.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL Analysis: ability to Join with index tables",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ZDCVZeroIteration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-28T17:00:13Z",
            "title": "Exclude testCcdbApi_alien.cxx",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CCDB/CMakeLists.txt"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: add ability to add extra channel via extra-channel-config",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-29T09:43:57Z",
            "title": "Add missing library to run_trac_alice3.C",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "macro/CMakeLists.txt"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[MCH] Move geometry into its own package.",
            "author": {
              "login": "aphecetche"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Base/src/MCHBaseLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/include/MCHGeometryCreator/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/MCHGeometryCreatorLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Materials.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Materials.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station1Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station1Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station2Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station2Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station345Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Creator/src/Station345Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/Helpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/drawMCHGeometry.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/ideal-geometry-aliroot.json"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/ideal-geometry-o2.json"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/include/MCHGeometryTest/Helpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/rootlogon.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/testGeometryCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Test/testGeometryTransformer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/include/MCHGeometryTransformer/Transformations.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/include/MCHGeometryTransformer/VolumePaths.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/src/Transformations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/src/VolumePaths.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Geometry/Transformer/src/convert-geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/include/MCHSimulation/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/MCHSimulationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testDigitMerging.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testDigitization.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testRegularGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testResponse.cxx"
                  }
                },
                {
                  "node": {
                    "path": "cmake/O2RootMacroExclusionList.cmake"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL Analysis: Fixed OutputObj sink to process custom TList correctly",
            "author": {
              "login": "saganatt"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/OutputObjHeader.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "SpaceCharge: bump ClassDefNV after changes to mRandomFlat",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/include/TPCSimulation/SpaceCharge.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "RecoDecay + PWGHF: Extend MC matching to support multi-stage decays and better particle origin tracking.",
            "author": {
              "login": "vkucera"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/RecoDecay.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskD0.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T16:42:08Z",
            "title": "Use InputRecordWalker to scan all EMC links",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/RawToCellConverterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T10:18:16Z",
            "title": "Revert \"Exclude testCcdbApi_alien.cxx (#4941)\"",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "CCDB/CMakeLists.txt"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-12-01T07:45:45Z",
            "title": "Fix find_package for MS GSL",
            "author": {
              "login": "qgp"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "dependencies/Findms_gsl.cmake"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-12-01T07:43:57Z",
            "title": "SpaceCharge: avoid copy/return by reference",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/include/TPCSimulation/SpaceCharge.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Fix for tof calibration object and clustering",
            "author": {
              "login": "noferini"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/CalibTimeSlewingParamTOF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/CalibTimeSlewingParamTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/tofworkflow/src/tof-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFClusterWriterSplitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSplitterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/cluster-writer-commissioning.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/digit-writer-commissioning.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Code to write and reconstruct raw data analysis",
            "author": {
              "login": "peressounko"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/PHOS/base/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod0RCU0.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod0RCU1.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod0RCU2.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod0RCU3.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod1RCU0.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod1RCU1.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod1RCU2.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod1RCU3.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod2RCU0.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod2RCU1.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod2RCU2.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod2RCU3.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod3RCU0.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod3RCU1.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod3RCU2.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/files/Mod3RCU3.data"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/include/PHOSBase/Mapping.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/include/PHOSBase/PHOSSimParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/include/PHOSBase/RCUTrailer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/src/Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/src/Mapping.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/src/RCUTrailer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/AltroDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/Bunch.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/CaloRawFitter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/Channel.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawBuffer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawDecodingError.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawHeaderStream.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawPayload.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawReaderError.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/include/PHOSReconstruction/RawReaderMemory.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/run/rawReaderFile.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/AltroDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/Bunch.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/CaloRawFitter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/Channel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/RawBuffer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/RawHeaderStream.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/RawPayload.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/reconstruction/src/RawReaderMemory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/include/PHOSSimulation/RawWriter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/src/PHOSSimulationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/src/RawCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/src/RawWriter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/include/PHOSWorkflow/RawToCellConverterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/include/PHOSWorkflow/RawWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/src/CellConverterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/src/ClusterizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/src/RawToCellConverterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/src/RawWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/workflow/src/RecoWorkflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T19:34:55Z",
            "title": "DPL Analysis: disable TTreeCache",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T15:43:45Z",
            "title": "Different workaround for false codechecker error",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingIO.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-12-01T07:45:21Z",
            "title": "enable track refinement with different cluster resolution",
            "author": {
              "login": "pillot"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackExtrap.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFinder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFinderOriginal.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/include/MCHTracking/TrackFitter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderOriginal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFitter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/ClusterSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderOriginalSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/TrackFinderSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL Analysis: report bytes read in kB",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Add possibility to compile GPU standalone benchmark with clang and fix compiler-warnings reported by clang",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUDataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUO2DataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstruction.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstruction.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionConvert.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionIncludes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainITS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainITS.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUTrackingInputProvider.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/3rdparty/HandMadeMath/HandMadeMathImpl.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/GPUQA.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/qa/genEvents.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/utils/qconfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/devtools/SemiregularSpline2D3D.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-11-30T21:23:04Z",
            "title": "Fix hip compilation for ITS vertexer",
            "author": {
              "login": "mpuccio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/hip/include/ITStrackingHIP/DeviceStoreVertexerHIP.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/hip/include/ITStrackingHIP/VertexerTraitsHIP.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/hip/src/DeviceStoreVertexerHIP.hip.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/hip/src/VertexerTraitsHIP.hip.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/include/ITStracking/Constants.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "EMC fix: check bunchIndex validity before using it",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CaloRawFitterStandard.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Fix compiler warnings",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/cuda/include/ITStrackingCUDA/PrimaryVertexContextNV.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/cuda/include/ITStrackingCUDA/TrackerTraitsNV.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/cuda/src/TrackerTraitsNV.cu"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/src/PrimaryVertexContext.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/src/TrackerTraitsCPU.cxx"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}

{
  "repository": {
    "pullRequests": {
      "edges": [
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-05T18:40:06Z",
            "title": "[EMCAL-610] Circumvent out-of-bounds error",
            "author": {
              "login": "mfasDa"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/include/EMCALSimulation/RawWriter.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/RawCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/RawWriter.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T10:17:20Z",
            "title": "Workflow for plug-in TOF analyses of compressed data",
            "author": {
              "login": "preghenella"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TOF/compression/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/compression/src/tof-compressed-analysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflow/CompressedAnalysis.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflow/CompressedAnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedAnalysisTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-06T22:49:02Z",
            "title": "Speedup navigation to need TF in RawFileReader",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/Raw/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/include/DetectorsRaw/RawFileReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/src/RawFileReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/src/RawFileReaderWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/src/RawFileReaderWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/src/rawfile-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Raw/src/rawfileCheck.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-04T19:11:52Z",
            "title": "Interface and params for AEGIS Cosmics generator",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Generators/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/GenCosmicsParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/GenCosmics.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/GenCosmicsLoader.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GenCosmicsParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "cmake/O2RootMacroExclusionList.cmake"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-07T08:44:55Z",
            "title": "Changed the workflow of the tableReader task",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/ReducedInfoTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableReader.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-05T15:31:12Z",
            "title": "Fix missing includes",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/partitions.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FDD/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FDD/workflow/src/RecPointReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FDD/workflow/src/ReconstructorSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/RecPointReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ReconstructionSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FV0/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/tofworkflow/src/CalibInfoReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/workflow/src/VertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/src/ClusterReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/workflow/src/ClusterReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/ClusterSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderOriginalSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFinderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFitterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackSinkSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/VertexSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/ClusterFinderOriginalSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/ClusterSinkSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/DigitSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/PreClusterFinderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/PreClusterSinkSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/testWorkflow/DataGeneratorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedInspectorTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/DigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFRawWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSamplingPolicy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDeviceInspector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDevicesGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/benchmark_TreeToTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DataOutputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Utils/include/DPLUtils/DPLRawParser.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Utils/include/DPLUtils/RootTreeReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Utils/include/DPLUtils/RootTreeWriter.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataFlow/src/TimeframeValidationTool.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataFlow/test/test_TimeframeParser.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/src/FullHistoryMerger.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/src/IntegratingMerger.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-06T22:48:34Z",
            "title": "RawPixelDecoder will fill chip decoding errors/statistics",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/AlpideCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/DecodingStat.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/GBTLink.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/PixelData.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/RUDecodeData.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/RawPixelDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/AlpideCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/DecodingStat.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/GBTLink.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/ITSMFTReconstructionLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/RUDecodeData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/RawPixelDecoder.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T12:28:45Z",
            "title": "adding D0 selector",
            "author": {
              "login": "nzardosh"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/CandidateSelectionTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/SecondaryVertexHF.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFD0CandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskD0.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T05:47:24Z",
            "title": "DPL Analysis: reintroduce TableTransform base class",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-07T19:32:13Z",
            "title": "DPL: do proper endOfStream for test_RegionInfoCallbackService",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/test/test_RegionInfoCallbackService.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TRD tracker can handle time frames instead of single collisions only",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/DataFormatsTRDLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDInterfaces.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTrackerDebug.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/macros/run_trd_tracker.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Streamlining definition and reading of tables",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisDataModel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/BoostOptionsRetriever.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DriverInfo.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDeviceInspector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDevicesGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/SimpleRawDeviceService.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/TableTreeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_Kernels.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_RegionInfoCallbackService.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_SimpleDataProcessingDevice01.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_StaggeringWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2D0Analysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2SimpleTracksAnalysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonDefAPI.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCCFChargeMapFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/GeneratorExternalParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/TriggerExternalParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/QEDLoader.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/QEDepem.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/hijing.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/pythia6.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/trigger_mpi.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/trigger_multiplicity.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorExternalParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/TriggerExternalParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthSourceSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthSourceSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthTestWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/etc/exampleDataSamplingConfig.json"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSampling.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingCondition.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingConditionFactory.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingHeader.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingPolicy.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingReadoutAdapter.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/Dispatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/scripts/o2-datasampling-benchmark.sh"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSampling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingConditionCustom.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingConditionFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingConditionNConsecutive.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingConditionPayloadSize.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingConditionRandom.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingHeader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingPolicy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingReadoutAdapter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/Dispatcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/dataSamplingBenchmark.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/dataSamplingParallel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/dataSamplingPodAndRoot.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/dataSamplingTimePipeline.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSampling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSampling.json"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSamplingCondition.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSamplingHeader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSamplingPolicy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/test/benchmark_FullVsDiff.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/test/benchmark_MergingCollections.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/Mergers/test/benchmark_Types.cxx"
                  }
                },
                {
                  "node": {
                    "path": "doc/DetectorSimulation.md"
                  }
                },
                {
                  "node": {
                    "path": "macro/build_geometry.C"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/produce_QEDhits.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/O2PrimaryServerDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/adaptive_pythia8.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/aliroot_ampt.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/aliroot_hijing.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/HF_Embedding_Pythia8/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/signal_impactb.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Trigger_ImpactB_Pythia8/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Trigger_ImpactB_Pythia8/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "scripts/profile-compilation-merge"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T11:57:35Z",
            "title": "[EMCAL-671] Fix leftover geometry path which is missing the barrel mo…",
            "author": {
              "login": "mfasDa"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/Geometry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T15:18:04Z",
            "title": "Init mag.field before initializing generator",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Common/Field/include/Field/MagneticField.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/Field/src/MagneticField.cxx"
                  }
                },
                {
                  "node": {
                    "path": "macro/build_geometry.C"
                  }
                },
                {
                  "node": {
                    "path": "run/O2PrimaryServerDevice.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T09:21:08Z",
            "title": "Add task for nuclei",
            "author": {
              "login": "lbariogl"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/NucleiSpectraTask.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T09:19:32Z",
            "title": "Fast DCAFitterN method to get track params at PCA w/o full propagation",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/Track.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/DCAFitterN.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T11:03:53Z",
            "title": "DPL: add RawDeviceService::waitFor method",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/RawDeviceService.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/SimpleRawDeviceService.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/SimpleRawDeviceService.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_SimpleDataProcessingDevice01.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_StaggeringWorkflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T10:10:18Z",
            "title": "DPL Analysis: drop arrow v0.17 compatibility",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Kernels.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/TableTreeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_Kernels.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T10:03:57Z",
            "title": "Use CCDB headers to get SOR timestamp for run",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/RunToTimestamp.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCoreLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/InsertNewRunToTimestamp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/RunToTimestamp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Scripts/insert_Run2_run_to_timestamps.py"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Scripts/inspect_Run2_run_to_timestamps.py"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/timestamp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ccdbaccess.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T13:29:29Z",
            "title": "[EMCAL-668] Add track position on EMCAL surface to TRACKEXTRA table",
            "author": {
              "login": "mfasDa"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T08:40:25Z",
            "title": "DPL Analysis: adapt Attach/Extend to new Join",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/dynamicColumns.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/extendedColumns.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: unify implementation of filter_pack and select_pack",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T15:17:24Z",
            "title": "Add method to enforce oldest slot finalization/removal",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/Calibration/include/DetectorsCalibration/TimeSlotCalibration.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-10T12:49:38Z",
            "title": "DPL: hide a few more headers",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/BoostOptionsRetriever.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ChannelConfigurationPolicy.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/BoostOptionsRetriever.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DriverInfo.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T08:17:19Z",
            "title": "Add filters to nuclei task",
            "author": {
              "login": "lbariogl"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/NucleiSpectraTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-08T22:24:20Z",
            "title": "DPL Foundation: use intrinsict for pack element, when available",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T10:13:43Z",
            "title": "Global track index for vertex->track reference",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackIndex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/ReconstructionDataFormatsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/VtxTrackIndex.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/include/CommonDataFormat/AbstractRef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/src/CommonDataFormatLinkDef.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T08:16:29Z",
            "title": "update eID",
            "author": {
              "login": "dsekihat"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonEE.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-10T06:21:27Z",
            "title": "DPL Foundation: speedup has_type_at",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T06:59:20Z",
            "title": "Strangeness tables + strangeness producer, consumer tasks (first commit)",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/Multiplicity.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/lambdakzeroproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T20:02:52Z",
            "title": "DPL Analysis: move ROOT helpers in a separate file",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/RootAnalysisHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2D0Analysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2SimpleTracksAnalysis.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T09:43:36Z",
            "title": "Profiling support",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".gitignore"
                  }
                },
                {
                  "node": {
                    "path": "scripts/profile-compilation-merge"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T18:25:44Z",
            "title": "Event selection adapted to MC",
            "author": {
              "login": "ekryshen"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelectionQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/timestamp.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-09T21:48:49Z",
            "title": "Fix: protection for processing empty sector",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCCFChargeMapFiller.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-11T08:11:36Z",
            "title": "Use the new raw data decoders in the checks",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/exe/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/exe/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/exe/raw-checker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/include/MIDQC/GBTRawDataChecker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/include/MIDQC/RawDataChecker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/src/GBTRawDataChecker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/QC/src/RawDataChecker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/CRUBareDataChecker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/CRUBareDataChecker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/mid-raw-checker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/mid-rawdump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/exe/rawdump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/CRUBareDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/RawBuffer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/RawFileReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/RawUnit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/CRUBareDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/RawBuffer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/RawFileReader.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T10:47:22Z",
            "title": "all TFs passed to reco",
            "author": {
              "login": "AllaMaevskaya"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DigitWriterDPLSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ReconstructionSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TPCClusterFinder: Add gain calibration.",
            "author": {
              "login": "fweig"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/Mapper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/test/testGPUCATracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonMath.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUConstantMem.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUDataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingIO.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2Interface.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCCFDecodeZS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/GPUTPCClusterFinder.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/TPCCFCalibration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/TPCCFCalibration.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/clusterFinderDefs.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TRD fix trapsimulator defaults",
            "author": {
              "login": "bazinski"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/include/TRDSimulation/TrapConfig.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-11T17:34:00Z",
            "title": "DPL Analysis: first draft for more generic index binding",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/associatedExample.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Introduction of fired channels in ZDC digitization",
            "author": {
              "login": "cortesep"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/BCData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/Constants.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/src/ModuleConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/macro/CreateModuleConfig.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/macro/CreateSimCondition.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/include/ZDCSimulation/Digitizer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/src/Digitizer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T11:50:24Z",
            "title": "More efficient structures for MCTruth sharing and ROOT IO",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/simulation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/ConstMCTruthContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/IOMCTruthContainerView.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/MCTruthContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/src/SimulationDataLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/test/testMCTruthContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthSourceSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthSourceSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthTestWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/MCTruthWriterSpec.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T06:37:10Z",
            "title": "some refactoring in correlation container",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/CorrelationContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsMixed.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ZDCVZeroIteration.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T06:36:22Z",
            "title": "Incorporated full pair processing",
            "author": {
              "login": "victor-gonzalez"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/AnalysisConfigurableCuts.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/AnalysisConfigurableCuts.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/PWGCFCoreLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/dptdptcorrelations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T06:36:57Z",
            "title": "HistHelpers: improved histogram collection and hist builder",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/HistHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histHelpersTest.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T08:10:47Z",
            "title": "PrimaryVertex - tracks matching + related classes/workflows update",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TPC/include/DataFormatsTPC/TrackTPC.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/PrimaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackIndex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/PrimaryVertex.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/include/CommonDataFormat/BunchFilling.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/include/CommonDataFormat/InteractionRecord.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/src/BunchFilling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/reconstruction/include/FT0Reconstruction/InteractionTag.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/PrimaryVertexReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/PrimaryVertexWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/VertexTrackMatcherSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexingSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/VertexTrackMatcherSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/primary-vertexing-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/GPUCATracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexerHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexerParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/VertexTrackMatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/DetectorsVertexingLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/PVertexer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/VertexTrackMatcher.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T08:12:28Z",
            "title": "Reject TPCITS match if corrected TPC time is outside of ITS ROF",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/GlobalTracking/src/MatchTPCITS.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T20:28:52Z",
            "title": "Validate ITS/TPC match by bunch filling scheme (except cosmics mode)",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Common/MathUtils/include/MathUtils/Bracket.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTracking/include/GlobalTracking/MatchTPCITS.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTracking/src/MatchTPCITS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/TPCITSMatchingSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-14T14:30:04Z",
            "title": "DPL: remove spurious message from Monitor::Cleanup",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T18:01:39Z",
            "title": "TRD digitization: Application of new labels container structure",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/IOMCTruthContainerView.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDBaseLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/include/TRDWorkflow/TRDDigitReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDDigitReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDDigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDDigitizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDTrapSimulatorSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T12:25:10Z",
            "title": "Analysis/PWGDQ: add tableMaker_pp",
            "author": {
              "login": "dsekihat"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/ReducedInfoTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonEE.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker_pp.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T07:49:22Z",
            "title": "Correctly encode the first event",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/test/testRaw.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T18:01:14Z",
            "title": "Fix clang-format in MID Encoder",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/Encoder.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T07:48:41Z",
            "title": "Correctly read masks written in hexadecimal format",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/CrateMasks.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Improve treatment of triggered events",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/GBTOutputHandler.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/GBTOutputHandler.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T07:44:16Z",
            "title": "Improve performance of MID raw data decoding without the user logic",
            "author": {
              "login": "dstocco"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/GBTBareDecoder.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Addition of the dimuon analysis task",
            "author": {
              "login": "vfeuilla"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/ReducedInfoTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonMuMu.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T13:52:08Z",
            "title": "DPL Analysis: First version of histogram registry writing",
            "author": {
              "login": "saganatt"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Ktf patch 24",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T19:27:25Z",
            "title": "GPU: Fix compilation when ROOT was compiled with CUDA support",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonDefAPI.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T17:14:33Z",
            "title": "fixing dynamic calculation of number of clusters",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/src/TrackSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T14:56:07Z",
            "title": "Add ability to code-format a PR.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Test",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Algorithm/include/Algorithm/FlattenRestore.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T08:54:15Z",
            "title": "DPL: modernize namespaces",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDeviceInspector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDevicesGraph.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-15T20:50:48Z",
            "title": "fix small logic bug in track selection",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/TrackSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/TrackSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Update BitstreamReader.h",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Algorithm/include/Algorithm/BitstreamReader.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T20:15:43Z",
            "title": "Classes to read DCS Data Points ",
            "author": {
              "login": "chiarazampolli"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/Clock.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointCompositeObject.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointIdentifier.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DataPointValue.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/DeliveryType.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/GenericFunctions.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/include/DetectorsDCS/StringUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/Clock.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointCompositeObject.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointIdentifier.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DataPointValue.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DeliveryType.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/DetectorsDCSLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/GenericFunctions.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/DCS/src/StringUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T12:54:40Z",
            "title": "workflow splitted to contain also an event selection; configuration updated for the analysis challenge",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/AnalysisCompositeCut.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCompositeCut.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableReader.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: automatically match dangling RAWDATA messages to rawProxy (O2-588)",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataSpecUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ExternalFairMQDeviceProxy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T09:08:22Z",
            "title": "Register contributions from all sources in vertex-track references",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackIndex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackRef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/ReconstructionDataFormatsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/VtxTrackIndex.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/VtxTrackRef.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/PrimaryVertexReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/VertexTrackMatcherSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexerHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/VertexTrackMatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/VertexTrackMatcher.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T11:37:50Z",
            "title": "add vertex axis, new functions in corr container",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/CorrelationContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T09:43:50Z",
            "title": "DPL: add helper to match only description",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataSpecUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Drop clang-formatter in Github actions",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".travis.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-16T10:23:03Z",
            "title": "GPU: Fix stupid 'typo'",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T07:42:25Z",
            "title": "DPL Analysis: Replace TList with TFolder for snapshoting histogram registry",
            "author": {
              "login": "saganatt"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "PrimaryGenerator that can propagate mother/daughter indices",
            "author": {
              "login": "preghenella"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Generators/include/Generators/PrimaryGenerator.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/Generator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/PrimaryGenerator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Added cascades, V0 finder",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/lambdakzerofinder.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T14:20:26Z",
            "title": "DPL: create matcher from description",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataSpecUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T15:07:16Z",
            "title": "add option to produce per-link raw data files for MID",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/Encoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/test/testRaw.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RawWriterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T07:59:38Z",
            "title": "Bug fixes in setting parameters",
            "author": {
              "login": "javierecc"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/src/AlignParam.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T06:46:26Z",
            "title": "Cascades, V0 finder, more stuff to LF folder",
            "author": {
              "login": "ddobrigk"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T07:35:19Z",
            "title": "Update sim_challenge.sh",
            "author": {
              "login": "sawenzel"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "prodtests/sim_challenge.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T12:05:35Z",
            "title": "Update spectra TPC task to fix json config issue",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/spectraTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Streamlining definition and reading of tables",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataAllocator.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisDataModelHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisDataModelHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/TableTreeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "DPL Analysis: adapt data model display",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/DataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/dumpDataModel.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[QC-403] Protect pendingInfoRegions from concurrent access",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessingDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TrackSelection: add pt dependent dca cut",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/TrackSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/TrackSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T14:21:06Z",
            "title": "DPL: Improve DataSpecUtils",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/o2NullSink.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T19:28:27Z",
            "title": "Added trigger selection. Analysis task moved to PWGUD",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGUD/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGUD/upcAnalysis.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T03:08:51Z",
            "title": "DPL Analysis: declare projectors static so they are reused",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "temporarily removed the TPC and TOF pid response dependencies",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/AnalysisCompositeCut.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/CorrelationContainer.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCompositeCut.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/Multiplicity.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/StrangenessTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/spectraTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/SimConfig/include/SimConfig/SimConfig.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/SimConfig/src/SimConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/src/AlignParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackIndex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackRef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/ReconstructionDataFormatsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/VtxTrackIndex.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/VtxTrackRef.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DigitWriterDPLSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ReconstructionSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/PrimaryVertexReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/VertexTrackMatcherSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Workflow/src/cru-page-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/include/MIDRaw/Encoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/CrateMasks.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Raw/test/testRaw.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RawWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexerHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/VertexTrackMatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/VertexTrackMatcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataSpecUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDeviceInspector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDevicesGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/o2NullSink.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/GeneratorExternalParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/include/Generators/TriggerExternalParam.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/QEDLoader.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/QEDepem.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/hijing.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/pythia6.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/trigger_mpi.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/share/external/trigger_multiplicity.C"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorExternalParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/GeneratorsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Generators/src/TriggerExternalParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "doc/DetectorSimulation.md"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/produce_QEDhits.sh"
                  }
                },
                {
                  "node": {
                    "path": "prodtests/sim_challenge.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/adaptive_pythia8.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Adaptive_Pythia8/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/aliroot_ampt.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_AMPT/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/aliroot_hijing.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/AliRoot_Hijing/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/HF_Embedding_Pythia8/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/run.sh"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Signal_ImpactB/signal_impactb.macro"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Trigger_ImpactB_Pythia8/README.md"
                  }
                },
                {
                  "node": {
                    "path": "run/SimExamples/Trigger_ImpactB_Pythia8/run.sh"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T19:28:52Z",
            "title": "￼ removed tof and tpc pid response from table maker",
            "author": {
              "login": "iarsene"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-17T19:28:05Z",
            "title": "Internal codes for centrality/multiplicity estimators names",
            "author": {
              "login": "victor-gonzalez"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/dptdptcorrelations.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T12:20:53Z",
            "title": "MID CTF, related workflows, test + fixes",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/include/DetectorsCommonDataFormats/EncodedBlocks.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MID/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MID/include/DataFormatsMID/CTF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MID/src/CTF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MID/src/DataFormatsMIDLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/test/test_ctf_io_mid.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/CTFReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/CTFWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/CTF/workflow/src/ctf-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/include/MIDCTF/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/include/MIDCTF/CTFHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/CTF/src/CTFHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/EntropyDecoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/EntropyEncoderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/include/MIDWorkflow/RecoWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/EntropyDecoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/EntropyEncoderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/entropy-encoder-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/mid-entropy-encoder-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Workflow/src/mid-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/rANS/include/rANS/FrequencyTable.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T05:04:54Z",
            "title": "DPL: fix wrong casing for variables",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T12:10:54Z",
            "title": "DPL: add --dangling-outputs-policy",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Hf speed",
            "author": {
              "login": "ginnocen"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/Track.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/DCAFitterN.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T10:15:26Z",
            "title": "DPL Analysis: update data model graph display",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/dumpDataModel.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-09-18T08:41:11Z",
            "title": "Improve helper for compilation profiling",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "scripts/profile-compilation"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Add TOF selection in track selection table",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/TrackSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/TrackSelectionTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "fixing merging",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}

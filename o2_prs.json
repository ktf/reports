{
  "repository": {
    "pullRequests": {
      "edges": [
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T07:43:57Z",
            "title": "Analysis: update multiplicity table producer to use current features",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Zdc dev Correct noise treatment for duplicated channels. Introduced geographical mapping of autotrigger bits",
            "author": {
              "login": "cortesep"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/include/DataFormatsZDC/BCData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/BCData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/ChannelData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/Constants.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/ModuleConfig.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/src/ModuleConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/macro/CreateModuleConfig.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/include/ZDCSimulation/Digitizer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/src/Digitizer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T14:09:49Z",
            "title": "[EMCAL-515] Use signed type for time calib values",
            "author": {
              "login": "mfasDa"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/include/EMCALCalib/TimeCalibrationParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TimeCalibrationParams.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Analysis: update event selection task to current features",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T14:18:37Z",
            "title": "Dev zdcmap - Geographical mapping of autotrigger bits and correct treatment of noise of duplicate channels",
            "author": {
              "login": "cortesep"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/include/DataFormatsZDC/BCData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/BCData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/ChannelData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/Constants.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/include/ZDCBase/ModuleConfig.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/base/src/ModuleConfig.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/macro/CreateModuleConfig.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/include/ZDCSimulation/Digitizer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/src/Digitizer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-09T12:29:18Z",
            "title": "code-formatting workflow: fetch all history",
            "author": {
              "login": "TimoWilken"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T14:08:40Z",
            "title": "MFT: add flag for MFT data in GBT data word",
            "author": {
              "login": "bovulpes"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/ChipMappingMFT.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/GBTWord.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T06:46:15Z",
            "title": "adding example to iterate over muons",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/run2Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/run3Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/filters.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/muonIteration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-09T17:24:06Z",
            "title": "Add some checks to TPC workflow and remove obsolete code",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/tpc-reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T07:43:11Z",
            "title": "Update tutorial for ccdb/timestamp access",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ccdbaccess.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T07:57:28Z",
            "title": "TPC Workflow: Fix TPC Completion Policy",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/CATrackerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/RecoWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/TPCSectorCompletionPolicy.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/tpc-raw-to-digits-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/tpc-reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T07:42:40Z",
            "title": "PWGHF: Adjust names of HF-related files and variables. Move trackUtilities.h to Analysis/Core. Split histograms.",
            "author": {
              "login": "vkucera"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/trackUtilities.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFCandidateSelectionTables.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFD0CandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskD0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskDPlus.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadefinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-10T06:27:09Z",
            "title": "Framework: add braces to single statements",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ConfigParamsHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataDescriptorQueryBuilder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataOutputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/Expressions.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/FrameworkGUIDevicesGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/benchmark_TreeToTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_GroupSlicer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/Pack.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/test/test_MakeDPLObjects.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-17T06:44:33Z",
            "title": "Algorithm Common: add braces to single statements",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Algorithm/include/Algorithm/Parser.h"
                  }
                },
                {
                  "node": {
                    "path": "Algorithm/include/Algorithm/TableView.h"
                  }
                },
                {
                  "node": {
                    "path": "Algorithm/test/pageparser.cxx"
                  }
                },
                {
                  "node": {
                    "path": "CCDB/include/CCDB/BasicCCDBManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/Field/src/MagFieldFast.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Field/src/MagFieldParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Field/src/MagneticField.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Field/src/MagneticWrapperChebyshev.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/MathUtils/include/MathUtils/MathBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/MathUtils/src/Chebyshev3D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/MathUtils/test/testUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Utils/include/CommonUtils/TreeStream.h"
                  }
                },
                {
                  "node": {
                    "path": "Common/Utils/src/TreeStream.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Utils/src/TreeStreamRedirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Common/Utils/test/testTreeStream.cxx"
                  }
                },
                {
                  "node": {
                    "path": "run/O2HitMerger.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T09:32:30Z",
            "title": "EMCAL: add braces to single statements",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/include/EMCALBase/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/include/EMCALBase/ShishKebabTrd1Module.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/ClusterFactory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/Hit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/Mapper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/RCUTrailer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/src/ShishKebabTrd1Module.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/base/test/testMapper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/BadChannelMap.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/CalibDB.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/GainCalibrationFactors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TempCalibParamSM.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TempCalibrationParams.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TimeCalibParamL1Phase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TimeCalibrationParams.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TriggerDCS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/src/TriggerSTUErrorCounter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testBadChannelMap.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testGainCalibration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTempCalibration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTempCalibrationSM.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTimeCalibration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTimeL1PhaseCalib.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTriggerDCS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTriggerSTUDCS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/calib/test/testTriggerTRUDCS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/run/rawReaderFile.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/AltroDecoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/Bunch.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CaloRawFitter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CaloRawFitterGamma2.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/CaloRawFitterStandard.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/Channel.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/RawBuffer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/RawPayload.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/reconstruction/src/RawReaderMemory.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/DigitizerTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/simulation/src/RawWriter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/CellConverterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/DigitsPrinterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/EMCAL/workflow/src/RawToCellConverterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-12T13:52:24Z",
            "title": "adding example for sparse BC matching",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/run2Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/muonIteration.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T21:10:55Z",
            "title": "Run2V0 replaced with FV0A and FV0C",
            "author": {
              "login": "ekryshen"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelectionQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/ZDCVZeroIteration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-12T12:27:00Z",
            "title": "Drop clang-format checker from travis.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".travis.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Don't enforce line length restrictions since this should be handled by common sense",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T21:13:48Z",
            "title": "Adapt DataInputDirector to the new AO2D file format, which includes a subdirectory TF_%d per time frame",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataInputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T09:10:41Z",
            "title": "[QC-428] Standalone Data Sampling executable",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/dataSamplingStandalone.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "V0 finder + related workflows and fixes",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/PID.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/TrackParametrizationWithError.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/V0.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/VtxTrackIndex.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/ReconstructionDataFormatsLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/src/V0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/common/include/CommonDataFormat/AbstractRef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/SecondaryVertexReaderSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/SecondaryVertexWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/include/GlobalTrackingWorkflow/SecondaryVertexingSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/PrimaryVertexingSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/SecondaryVertexReaderSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/SecondaryVertexWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/SecondaryVertexingSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/primary-vertexing-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/secondary-vertex-reader-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/src/secondary-vertexing-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/SVertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/SVertexerParams.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/V0Hypothesis.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/DetectorsVertexingLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/PVertexer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/SVertexer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/SVertexerParams.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/V0Hypothesis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/VertexTrackMatcher.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-12T17:59:22Z",
            "title": "Analysis: speed up PID",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/PIDTOF.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/PIDTPC.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PIDBase/DetectorResponse.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/DetectorResponse.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/PIDTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/PIDTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T11:42:11Z",
            "title": "enabling covariance on muons",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T06:43:39Z",
            "title": "Update nuclei masses to the latest CODATA values",
            "author": {
              "login": "mpuccio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Common/Constants/include/CommonConstants/PhysicsConstants.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T13:43:03Z",
            "title": "Some improvements to TPC standalone visualization",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTrackingDebugAndProfiling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplay.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplayKeys.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/standalone.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/TRDTracking/GPUTRDTracker.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T11:55:44Z",
            "title": "DPL Analysis: send prebuilt tables on finalise, not postRun",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T12:13:36Z",
            "title": "adding example of schema evolution",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/schemaEvolution.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Disk Mothers Boards",
            "author": {
              "login": "frmanso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/base/src/HalfCone.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T16:03:14Z",
            "title": "Revert \"Write non-dangling outputs to file\"",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T13:29:36Z",
            "title": "Check if digits are available before accessing them",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T09:07:39Z",
            "title": "TPC Workflow: Add option to split clusters per sector when writing to ROOT file",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/CATrackerSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/include/TPCWorkflow/RecoWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/RecoWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/tpc-reco-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-14T14:04:10Z",
            "title": "DPL: A method to check if one InputSpec includes other",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataSpecUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-13T19:27:52Z",
            "title": "Update to TPC spectra task and added PID QA plots to PID tasks",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-14T11:46:43Z",
            "title": "Added T0 timing and multiplicity",
            "author": {
              "login": "ekryshen"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/EventSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/Multiplicity.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelectionQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityTable.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T12:46:29Z",
            "title": "DPL Analysis: rework TableToTree",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/TableTreeHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/TableTreeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/benchmark_TreeToTable.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_TreeToTable.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-14T13:08:32Z",
            "title": "fix alien reading",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T09:08:52Z",
            "title": "Some forward declarations / template usage for GPU compilation",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TPC/include/DataFormatsTPC/Defs.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TPC/include/DataFormatsTPC/TrackTPC.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/TrackParametrization.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/Mapper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/SpacePoints/src/TrackInterpolation.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUROOTCartesianFwd.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T07:25:20Z",
            "title": "Allow user-provided DataDescription in RawPixelDecoder",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/RawPixelDecoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/RawPixelDecoder.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-14T13:59:48Z",
            "title": "Add missing include for ROOT 6.22",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-14T18:57:29Z",
            "title": "DPL Foundation: add own runtime_error.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Foundation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/include/Framework/RuntimeError.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/src/RuntimeError.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/test/test_RuntimeError.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T08:52:02Z",
            "title": "Writes time frames into directories TF_%d of same file",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataOutputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataOutputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/TableTreeHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T09:43:16Z",
            "title": "adapt ClusterNativeHelper file reading to new data structures for clusters and MC",
            "author": {
              "login": "wiechula"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TPC/include/DataFormatsTPC/ClusterNativeHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TPC/src/ClusterNativeHelper.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T09:23:52Z",
            "title": "Fix overlaps in MCH",
            "author": {
              "login": "javierecc"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Station1Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Passive/src/Shil.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T09:54:01Z",
            "title": "DPL: add metadata to InputSpec",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/InputSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/InputSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowSerializationHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_WorkflowSerialization.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2DiamondWorkflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T09:37:46Z",
            "title": "Update TOF and TPC PID workflow ",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/PIDResponse.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/PIDTOF.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/PIDTPC.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PIDBase/DetectorResponse.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/PIDTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/PIDTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/pidTPC.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T05:23:37Z",
            "title": "DPL: use Framework/RuntimeError helpers throughout the framework",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackFitterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoAHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CallbackRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataAllocator.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataDescriptorMatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataDescriptorMatcher.inc"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessingDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataRefUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ErrorContext.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Expressions.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/InputRecord.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/MessageContext.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/RootConfigParamHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceRegistryHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/TMessageSerializer.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/TableBuilder.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Variant.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ChannelSpecHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataAllocator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataDescriptorMatcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/Expressions.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/LifetimeHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_InputRecord.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_Services.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_TMessageSerializer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_Variants.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/unittest_DataSpecUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Foundation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/TestWorkflows/src/o2DiamondWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Utils/include/DPLUtils/RootTreeWriter.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T09:28:49Z",
            "title": "TRD fix tracklet column",
            "author": {
              "login": "bazinski"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TRD/simulation/src/TrapSimulator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "TRD initial compressed header.",
            "author": {
              "login": "bazinski"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/include/DataFormatsTRD/CompressedHeader.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T11:05:16Z",
            "title": "Don't git fetch --unshallow, as we've already got a full clone",
            "author": {
              "login": "TimoWilken"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": ".github/workflows/code-formatting.yml"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-15T14:30:12Z",
            "title": "DPL: exit only the relevant devices when writing is complete.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T14:42:26Z",
            "title": "[QC-338] Facilitate creating a Dispatcher without configuration files",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingCondition.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSamplingPolicy.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/Dispatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSampling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingPolicy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/Dispatcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSampling.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSamplingPolicy.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T06:41:49Z",
            "title": "DPL Analysis: protect expression application from empty table",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/Expressions.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "O2-1702 [math_utils] refactor and extend o2::mathutils",
            "author": {
              "login": "MichaelLettrich"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/GlobalTracking/src/MatchTPCITS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/base/include/ITSBase/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/EVE/DisplayEventsComp.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/test/CheckClusters.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/test/CheckDigits.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/test/CheckTopologies.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/macros/test/DisplayTrack.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/include/ITSReconstruction/CookedTracker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/include/ITSReconstruction/RecoGeomHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/src/ClustererTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/src/CookedTracker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/src/RecoGeomHelper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/reconstruction/src/TrivialVertexer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/include/ITStracking/MathUtils.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/include/ITStracking/Vertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/tracking/src/IOUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/workflow/src/CookedTrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/ITS/workflow/src/TrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/base/include/MFTBase/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/macros/test/CheckTopologies.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/reconstruction/src/ClustererTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/simulation/src/DigitizerTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/include/MFTTracking/Tracker.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/src/Cluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/src/IOUtils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/tracking/src/TrackFitter.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/MFT/workflow/src/TrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/base/include/ITSMFTBase/SegmentationAlpide.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/simulation/include/ITSMFTSimulation/Hit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/test/HitAnalysis/src/HitAnalysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/include/MCHSimulation/Geometry.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/include/MCHSimulation/Hit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Geometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/GeometryTest.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Stepper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/src/Stepper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testDigitization.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Simulation/test/testGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/TrackAtVertexSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MCH/Tracking/src/VertexSamplerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Base/include/MIDBase/GeometryTransformer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Base/src/GeometryTransformer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/include/MIDSimulation/Digitizer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/include/MIDSimulation/Hit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/include/MIDSimulation/Stepper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/src/Digitizer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/src/Hit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/src/Stepper.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/test/testGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/Simulation/test/testSimulation.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/TestingSimTools/include/MIDTestingSimTools/HitFinder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/MUON/MID/TestingSimTools/src/HitFinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/base/include/PHOSBase/Hit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/include/PHOSSimulation/Detector.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/Strip.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/LHCClockCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/TOFChannelCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/ClustererTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/include/TPCBase/Mapper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/base/test/testTPCBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/SpacePoints/src/TrackInterpolation.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/SpacePoints/src/TrackResiduals.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/include/TPCCalibration/FastHisto.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibPedestal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibPulser.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/calibration/src/CalibTreeDump.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/include/TPCSimulation/Point.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/src/GEMAmplification.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/simulation/src/SpaceCharge.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/base/src/TRDGeometry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/base/include/ITS3Base/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/IT3/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/base/include/ITS4Base/GeometryTGeo.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Upgrades/PostLS4/IT4/base/src/GeometryTGeo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/DCAFitterN.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/HelixHelper.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexer.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/PVertexerHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/include/DetectorsVertexing/VertexTrackMatcher.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/PVertexer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/src/VertexTrackMatcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Vertexing/test/testDCAFitterN.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/include/ZDCSimulation/Detector.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/include/ZDCSimulation/Hit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ZDC/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "EventVisualisation/Detectors/src/DataInterpreterITS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUCommonMath.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/Common/GPUROOTCartesianFwd.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/ITS/GPUITSFitterKernels.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/ITSMFTDigitizerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "macro/CheckDigits_mft.C"
                  }
                },
                {
                  "node": {
                    "path": "macro/run_primary_vertexer_ITS.C"
                  }
                },
                {
                  "node": {
                    "path": "macro/run_trac_ca_its.C"
                  }
                },
                {
                  "node": {
                    "path": "macro/run_trac_its.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T06:43:00Z",
            "title": "PWGHF: Fix histogram filling. Define base candidate columns.",
            "author": {
              "login": "vkucera"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: improve ability to forward messages to an output",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-17T06:43:40Z",
            "title": "Overload InputSpecsForPolicy with shared_ptr",
            "author": {
              "login": "Barthelemy"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/include/DataSampling/DataSampling.h"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSampling.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "new interface for 1D and 2D splines",
            "author": {
              "login": "sgorbuno"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/include/TPCReconstruction/TPCFastTransformHelperO2.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/TPCFastTransformHelperO2.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/dEdx/TPCdEdxCalibrationSplines.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/dEdx/TPCdEdxCalibrationSplines.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline1D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline1D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline1DSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline1DSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline2D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline2D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline2DSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/Spline2DSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/SplineHelper1D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/SplineHelper1D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/SplineHelper2D.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/SplineHelper2D.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastSpaceChargeCorrection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastSpaceChargeCorrection.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/TPCFastTransformationLinkDef_O2.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/macro/SplineDemo.C"
                  }
                },
                {
                  "node": {
                    "path": "GPU/TPCFastTransformation/test/testSplines.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T08:42:09Z",
            "title": "DPL Analysis: use \"Consume\" as a policy for AOD writer",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CompletionPolicy.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T11:50:29Z",
            "title": "fixing double delete",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-16T17:41:27Z",
            "title": "tables for run 3 matcher",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/run3Matcher.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Only consider Bz in propagator if specific flag is set",
            "author": {
              "login": "martenole"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMPropagator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-17T11:30:20Z",
            "title": "HistogramRegistry: add support for all root histogram types",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/HistogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/benchmark_HistogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_HistogramRegistry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[TEST - Don't merge] Add class for TPC refit",
            "author": {
              "login": "davidrohr"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/reconstruction/src/GPUCATracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/workflow/src/CATrackerSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUDataTypes.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUReconstructionCPU.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Base/GPUSettingsList.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/DataCompression/GPUTPCClusterStatistics.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/GPUTrackingLinkDef_O2.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Global/GPUChainTracking.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceConfiguration.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceRefit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Interface/GPUO2InterfaceRefit.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMerger.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMMerger.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Merger/GPUTPCGMTrackParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Refit/GPUTrackingRefit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Refit/GPUTrackingRefit.h"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/Refit"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/display/GPUDisplayKeys.cxx"
                  }
                },
                {
                  "node": {
                    "path": "GPU/GPUTracking/Standalone/standalone.cxx"
                  }
                },
                {
                  "node": {
                    "path": "macro/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "macro/runTPCRefit.C"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Adding classes to calculate the space charge distortions and corrections",
            "author": {
              "login": "matthias-kleiner"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/TPC/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/DataContainer3D.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/PoissonSolver.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/PoissonSolverStructs.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/RegularGrid3D.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/SpaceCharge.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/SpaceChargeStructs.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/TriCubic.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/include/TPCSpacecharge/Vector.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/macro/calculateDistortionsCorrections.C"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/src/PoissonSolver.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/src/SpaceCharge.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/src/TPCSpacechargeLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TPC/spacecharge/test/testO2TPCPoissonSolver.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "PHOS raw data decoder taking input from the file",
            "author": {
              "login": "policheh"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/PHOS/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/PHOS/raw/rawReaderFile.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-17T13:04:22Z",
            "title": "fix for alien connection (will be updated by new reader)",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "Update of reader / writer",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataInputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataOutputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataOutputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-18T11:08:15Z",
            "title": "DPL: introduce metric observer callback",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonServices.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-18T17:00:22Z",
            "title": "TrackQA: use HistogramRegistry",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/trackqa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T05:29:03Z",
            "title": "DPL: add tracking of AOD messages created / destroyed.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ArrowContext.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessor.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceRegistry.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonServices.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessor.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/ServiceRegistry.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Mft raw",
            "author": {
              "login": "bovulpes"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/ChipMappingMFT.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/GBTWord.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/GBTLink.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T14:41:55Z",
            "title": "DPL: improve metrics for arrow messages",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessor.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-19T14:24:00Z",
            "title": "TPCClusterFinder: Set single-flag on created clusters.",
            "author": {
              "login": "fweig"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "GPU/GPUTracking/TPCClusterFinder/ClusterAccumulator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Analysis: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/AnalysisCut.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/HistHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/HistogramManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/MC.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/PairCuts.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/StepTHn.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/VarManager.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/AnalysisCompositeCut.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/CorrelationContainer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/HistogramManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/JetFinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/StepTHn.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/VarManager.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/include/PID/TOFReso.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/DataModel/src/aodDataModelGraph.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsFiltered.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/correlationsMixed.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/dptdptcorrelations.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGCF/filterCF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonEE.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/dileptonMuMu.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableMaker_pp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGDQ/tableReader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFD0CandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGJE/jetfinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGJE/jetfinderhadronrecoil.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGJE/jetsubstructure.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/NucleiSpectraTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadefinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/cascadeproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroconsumer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzerofinder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/lambdakzeroproducer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/mcspectraefficiency.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/raacharged.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/spectraTPC.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGLF/trackchecks.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGUD/upcAnalysis.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/centralityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/eventSelectionQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/multiplicityQa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/qaTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackqa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramTrackSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/mcHistograms.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "HistogramRegistry: allow for grouping of histograms in output file",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-20T10:52:51Z",
            "title": "DPL Analysis: use index-builder similar to aod-spawner for predefined index tables",
            "author": {
              "login": "aalkin"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-20T07:06:57Z",
            "title": "[QC-450] Allow for output proxy channels which aren't \"downstream\"",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/ExternalFairMQDeviceProxy.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DataFormats: make readability-braces-around-statements happy",
            "author": {
              "login": "anerokhi"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/CPV/include/DataFormatsCPV/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/include/DetectorsCommonDataFormats/DetMatrixCache.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/Common/src/AlignParam.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/include/DataFormatsEMCAL/AnalysisCluster.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/AnalysisCluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/Cell.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/Digit.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/EMCAL/src/EventHandler.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/LookUpTable.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/RawEventData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/DigitsTemp.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/ITS/src/TrackITS.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/ClusterPattern.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/include/DataFormatsITSMFT/NoiseMap.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/src/ClusterPattern.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/src/ClusterTopology.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ITSMFT/common/src/TopologyDictionary.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/MUON/MID/src/ColumnData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/PHOS/include/DataFormatsPHOS/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/PHOS/src/Cell.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/CalibTimeSlewingParamTOF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/CalibLHCphaseTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/CalibTimeSlewingParamTOF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/Cluster.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TRD/src/RawData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/ZDC/src/BCData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Headers/include/Headers/DataHeader.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Headers/include/Headers/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Headers/src/DataHeader.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/TrackFwd.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Reconstruction/include/ReconstructionDataFormats/TrackParametrizationWithError.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/MCTrack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/include/SimulationDataFormat/Stack.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/simulation/src/Stack.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-20T08:37:06Z",
            "title": "DPL: add Lifetime::Signal to trigger processing on a signal",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessingDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DeviceState.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Lifetime.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "DPL: initial attempt at rate limiting.",
            "author": {
              "login": "ktf"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataProcessingDevice.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DeviceMetricsInfo.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DeviceState.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/Lifetime.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ServiceSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonMessageBackends.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataProcessingDevice.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceMetricsInfo.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DeviceSpecHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/runDataProcessing.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[QC-447] Allow to specify OutputSpecs of DataSamplingPolicies",
            "author": {
              "login": "knopers8"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Utilities/DataSampling/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/src/DataSamplingPolicy.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Utilities/DataSampling/test/test_DataSamplingPolicy.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "[WIP] Use track selection table to require global tracks",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Preliminary version of AOD producer workflow",
            "author": {
              "login": "nburmaso"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/AOD/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/include/AODProducerWorkflow/AODProducerWorkflowSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/AODProducerWorkflowSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/AOD/src/aod-producer-workflow.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "[WIP] Mean vertex calibration",
            "author": {
              "login": "chiarazampolli"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Calibration/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Calibration/include/DataFormatsCalibration/MeanVertexObject.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Calibration/src/DataFormatsCalibrationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Calibration/src/MeanVertexObject.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/include/DetectorsCalibration/MeanVertexCalibrator.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/include/DetectorsCalibration/MeanVertexData.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/DetectorsCalibrationLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/MeanVertexCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/MeanVertexData.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/TimeSlot.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/TimeSlotCalibration.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/src/Utils.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/workflow/include/DetectorsCalibrationWorkflow/MeanVertexCalibratorSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/workflow/src/MeanVertexCalibratorSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/Calibration/workflow/src/mean-vertex-calibration-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/LHCClockCalibrator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/calibration/src/TOFChannelCalibrator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-20T14:56:22Z",
            "title": "Revert \"DPL Analysis: use index-builder similar to aod-spawner for pr…",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AODReaderHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/ASoA.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisDataModel.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/AnalysisTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AnalysisManagers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T06:36:20Z",
            "title": "Split track extension and selection",
            "author": {
              "login": "njacazio"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/TrackSelection.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/TrackSelectionDefaults.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/TrackSelection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/ALICE3/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/ALICE3/alice3-trackselection.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackextension.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackqa.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/trackselection.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "fill method with variable arguments",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/StepTHn.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Core/src/StepTHn.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T21:54:46Z",
            "title": "Update of AOD reader / writer",
            "author": {
              "login": "pbuehler"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/ANALYSIS.md"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/CommonDataProcessors.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataInputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/DataOutputDirector.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/runDataProcessing.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/AODReaderHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataInputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/DataOutputDirector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/src/WorkflowHelpers.h"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/test/test_DataInputDirector.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "conet mode enabled in TOF decoding and reco + fixes for CTF",
            "author": {
              "login": "noferini"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/CTF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/CTF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/DataFormatsTOFLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/tofworkflow/src/tof-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/WindowFiller.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/WindowFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/Decoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Clusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Decoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/CompressedDecodingTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedDecodingTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFDigitWriterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T06:36:36Z",
            "title": "examples for efficiency histograms",
            "author": {
              "login": "jgrosseo"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/efficiencyGlobal.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/efficiencyPerRun.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Enable conet mode in TOF decoding and reco + fixes in CTF",
            "author": {
              "login": "noferini"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/CTF.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/include/DataFormatsTOF/Cluster.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/CTF.cxx"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/TOF/src/DataFormatsTOFLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/GlobalTrackingWorkflow/tofworkflow/src/tof-reco-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/include/TOFBase/WindowFiller.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/base/src/WindowFiller.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/CTFCoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/include/TOFReconstruction/Decoder.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/CTFCoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Clusterer.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Decoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/reconstruction/src/Encoder.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/CompressedDecodingTask.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/include/TOFWorkflowUtils/TOFDigitWriterSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/CompressedDecodingTask.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TOF/workflow/src/TOFDigitWriterSpec.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T06:38:02Z",
            "title": "HistogramRegistry: allow for grouping of histograms in output file",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Tutorials/src/histogramRegistry.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Framework/Core/include/Framework/HistogramRegistry.h"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T09:39:07Z",
            "title": "PWGHF: Extend and improve track index skimming.",
            "author": {
              "login": "vkucera"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/Core/include/Analysis/RecoDecay.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFD0CandidateSelector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskD0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/taskDPlus.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T18:29:21Z",
            "title": "HistogramRegistry: write output into (sub-)directories",
            "author": {
              "login": "mkruegerGitHub"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Framework/Core/src/CommonDataProcessors.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "CLOSED",
            "mergedAt": null,
            "title": "FITRaw framework added(FT0Raw devided)",
            "author": {
              "login": "afurs"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/RawEventData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/DataFormatsFT0LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DigitBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/RawReaderFT0Base.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/DataBlockFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/DigitBlockFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/FT0RawLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/RawReaderFT0Base.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/FT0DataReaderDPLSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/FT0Workflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/RawReaderFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DataReaderDPLSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0Workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/RawReaderFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ft0-flp-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/DataBlockBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/DigitBlockBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/RawReaderBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/DataBlockBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/DigitBlockBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/FITRawLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/RawReaderBase.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "FITRaw lib, for raw2digit conversion at FIT",
            "author": {
              "login": "afurs"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/Digit.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/include/DataFormatsFT0/RawEventData.h"
                  }
                },
                {
                  "node": {
                    "path": "DataFormats/Detectors/FIT/FT0/src/DataFormatsFT0LinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DataBlockReader.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/DigitBlockFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/include/FT0Raw/RawReaderFT0Base.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/DataBlockFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/DigitBlockFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/FT0RawLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/raw/src/RawReaderFT0Base.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/simulation/src/Detector.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/FT0DataReaderDPLSpec.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/FT0Workflow.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/include/FT0Workflow/RawReaderFT0.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0DataReaderDPLSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/FT0Workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/RawReaderFT0.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/FT0/workflow/src/ft0-flp-workflow.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/CMakeLists.txt"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/README.md"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/DataBlockBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/DigitBlockBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/include/FITRaw/RawReaderBase.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/DataBlockBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/DigitBlockBase.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/FITRawLinkDef.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/FIT/raw/src/RawReaderBase.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "MERGED",
            "mergedAt": "2020-10-21T22:13:01Z",
            "title": "PWGHF: Reduce size of track index skim table.",
            "author": {
              "login": "vkucera"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Analysis/DataModel/include/Analysis/HFSecondaryVertex.h"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator2Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFCandidateCreator3Prong.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Analysis/Tasks/PWGHF/HFTrackIndexSkimsCreator.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Change ITS/MFT GBT data ERRORCHECK, new error for unknown GBT word",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/DecodingStat.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/include/ITSMFTReconstruction/GBTLink.h"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/reconstruction/src/GBTLink.cxx"
                  }
                }
              ]
            }
          }
        },
        {
          "node": {
            "state": "OPEN",
            "mergedAt": null,
            "title": "Force tree to have N entries consistent with that of branches",
            "author": {
              "login": "shahor02"
            },
            "files": {
              "edges": [
                {
                  "node": {
                    "path": "Detectors/ITSMFT/common/workflow/src/DigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Detectors/TRD/workflow/src/TRDDigitWriterSpec.cxx"
                  }
                },
                {
                  "node": {
                    "path": "Steer/DigitizerWorkflow/src/FDDDigitWriterSpec.h"
                  }
                }
              ]
            }
          }
        }
      ]
    }
  }
}
